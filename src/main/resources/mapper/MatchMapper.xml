<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.billiard.dao.MatchMapper">
  <resultMap id="BaseResultMap" type="com.billiard.entity.Match">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="match_name" jdbcType="VARCHAR" property="matchName" />
    <result column="organization" jdbcType="VARCHAR" property="organization" />
    <result column="match_content" jdbcType="VARCHAR" property="matchContent" />
    <result column="match_time" jdbcType="TIMESTAMP" property="matchTime" />
    <result column="match_place" jdbcType="VARCHAR" property="matchPlace" />
    <result column="planning" jdbcType="VARCHAR" property="planning" />
    <result column="schedule" jdbcType="VARCHAR" property="schedule" />
    <result column="enroll_time" jdbcType="TIMESTAMP" property="enrollTime" />
    <result column="enroll_time_end" jdbcType="TIMESTAMP" property="enrollTimeEnd" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="match_del" jdbcType="INTEGER" property="matchDel" />
    <result column="match_now" jdbcType="INTEGER" property="matchNow" />
    <result column="time_quantum" jdbcType="VARCHAR" property="timeQuantum" />
    <result column="is_end" jdbcType="BIT" property="isEnd" />
    <result column="enroll_cost" jdbcType="INTEGER" property="enrollCost" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.billiard.entity.MatchWithBLOBs">
    <result column="details" jdbcType="LONGVARCHAR" property="details" />
    <result column="name_list" jdbcType="LONGVARCHAR" property="nameList" />
    <result column="result" jdbcType="LONGVARCHAR" property="result" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, match_name, organization, match_content, match_time, match_place, planning, schedule, 
    enroll_time, enroll_time_end, create_time, create_user, match_del, match_now, time_quantum, 
    is_end, enroll_cost
  </sql>
  <sql id="Blob_Column_List">
    details, name_list, result
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.billiard.entity.MatchExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_match
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.billiard.entity.MatchExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_match
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_match
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from t_match
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.billiard.entity.MatchExample">
    delete from t_match
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.billiard.entity.MatchWithBLOBs">
    insert into t_match (id, match_name, organization, 
      match_content, match_time, match_place, 
      planning, schedule, enroll_time, 
      enroll_time_end, create_time, create_user, 
      match_del, match_now, time_quantum, 
      is_end, enroll_cost, details, 
      name_list, result)
    values (#{id,jdbcType=VARCHAR}, #{matchName,jdbcType=VARCHAR}, #{organization,jdbcType=VARCHAR}, 
      #{matchContent,jdbcType=VARCHAR}, #{matchTime,jdbcType=TIMESTAMP}, #{matchPlace,jdbcType=VARCHAR}, 
      #{planning,jdbcType=VARCHAR}, #{schedule,jdbcType=VARCHAR}, #{enrollTime,jdbcType=TIMESTAMP}, 
      #{enrollTimeEnd,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}, #{createUser,jdbcType=VARCHAR}, 
      #{matchDel,jdbcType=INTEGER}, #{matchNow,jdbcType=INTEGER}, #{timeQuantum,jdbcType=VARCHAR}, 
      #{isEnd,jdbcType=BIT}, #{enrollCost,jdbcType=INTEGER}, #{details,jdbcType=LONGVARCHAR}, 
      #{nameList,jdbcType=LONGVARCHAR}, #{result,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.billiard.entity.MatchWithBLOBs">
    insert into t_match
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="matchName != null">
        match_name,
      </if>
      <if test="organization != null">
        organization,
      </if>
      <if test="matchContent != null">
        match_content,
      </if>
      <if test="matchTime != null">
        match_time,
      </if>
      <if test="matchPlace != null">
        match_place,
      </if>
      <if test="planning != null">
        planning,
      </if>
      <if test="schedule != null">
        schedule,
      </if>
      <if test="enrollTime != null">
        enroll_time,
      </if>
      <if test="enrollTimeEnd != null">
        enroll_time_end,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="matchDel != null">
        match_del,
      </if>
      <if test="matchNow != null">
        match_now,
      </if>
      <if test="timeQuantum != null">
        time_quantum,
      </if>
      <if test="isEnd != null">
        is_end,
      </if>
      <if test="enrollCost != null">
        enroll_cost,
      </if>
      <if test="details != null">
        details,
      </if>
      <if test="nameList != null">
        name_list,
      </if>
      <if test="result != null">
        result,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="matchName != null">
        #{matchName,jdbcType=VARCHAR},
      </if>
      <if test="organization != null">
        #{organization,jdbcType=VARCHAR},
      </if>
      <if test="matchContent != null">
        #{matchContent,jdbcType=VARCHAR},
      </if>
      <if test="matchTime != null">
        #{matchTime,jdbcType=TIMESTAMP},
      </if>
      <if test="matchPlace != null">
        #{matchPlace,jdbcType=VARCHAR},
      </if>
      <if test="planning != null">
        #{planning,jdbcType=VARCHAR},
      </if>
      <if test="schedule != null">
        #{schedule,jdbcType=VARCHAR},
      </if>
      <if test="enrollTime != null">
        #{enrollTime,jdbcType=TIMESTAMP},
      </if>
      <if test="enrollTimeEnd != null">
        #{enrollTimeEnd,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="matchDel != null">
        #{matchDel,jdbcType=INTEGER},
      </if>
      <if test="matchNow != null">
        #{matchNow,jdbcType=INTEGER},
      </if>
      <if test="timeQuantum != null">
        #{timeQuantum,jdbcType=VARCHAR},
      </if>
      <if test="isEnd != null">
        #{isEnd,jdbcType=BIT},
      </if>
      <if test="enrollCost != null">
        #{enrollCost,jdbcType=INTEGER},
      </if>
      <if test="details != null">
        #{details,jdbcType=LONGVARCHAR},
      </if>
      <if test="nameList != null">
        #{nameList,jdbcType=LONGVARCHAR},
      </if>
      <if test="result != null">
        #{result,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.billiard.entity.MatchExample" resultType="java.lang.Long">
    select count(*) from t_match
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_match
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.matchName != null">
        match_name = #{record.matchName,jdbcType=VARCHAR},
      </if>
      <if test="record.organization != null">
        organization = #{record.organization,jdbcType=VARCHAR},
      </if>
      <if test="record.matchContent != null">
        match_content = #{record.matchContent,jdbcType=VARCHAR},
      </if>
      <if test="record.matchTime != null">
        match_time = #{record.matchTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.matchPlace != null">
        match_place = #{record.matchPlace,jdbcType=VARCHAR},
      </if>
      <if test="record.planning != null">
        planning = #{record.planning,jdbcType=VARCHAR},
      </if>
      <if test="record.schedule != null">
        schedule = #{record.schedule,jdbcType=VARCHAR},
      </if>
      <if test="record.enrollTime != null">
        enroll_time = #{record.enrollTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.enrollTimeEnd != null">
        enroll_time_end = #{record.enrollTimeEnd,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.matchDel != null">
        match_del = #{record.matchDel,jdbcType=INTEGER},
      </if>
      <if test="record.matchNow != null">
        match_now = #{record.matchNow,jdbcType=INTEGER},
      </if>
      <if test="record.timeQuantum != null">
        time_quantum = #{record.timeQuantum,jdbcType=VARCHAR},
      </if>
      <if test="record.isEnd != null">
        is_end = #{record.isEnd,jdbcType=BIT},
      </if>
      <if test="record.enrollCost != null">
        enroll_cost = #{record.enrollCost,jdbcType=INTEGER},
      </if>
      <if test="record.details != null">
        details = #{record.details,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.nameList != null">
        name_list = #{record.nameList,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.result != null">
        result = #{record.result,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update t_match
    set id = #{record.id,jdbcType=VARCHAR},
      match_name = #{record.matchName,jdbcType=VARCHAR},
      organization = #{record.organization,jdbcType=VARCHAR},
      match_content = #{record.matchContent,jdbcType=VARCHAR},
      match_time = #{record.matchTime,jdbcType=TIMESTAMP},
      match_place = #{record.matchPlace,jdbcType=VARCHAR},
      planning = #{record.planning,jdbcType=VARCHAR},
      schedule = #{record.schedule,jdbcType=VARCHAR},
      enroll_time = #{record.enrollTime,jdbcType=TIMESTAMP},
      enroll_time_end = #{record.enrollTimeEnd,jdbcType=TIMESTAMP},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_user = #{record.createUser,jdbcType=VARCHAR},
      match_del = #{record.matchDel,jdbcType=INTEGER},
      match_now = #{record.matchNow,jdbcType=INTEGER},
      time_quantum = #{record.timeQuantum,jdbcType=VARCHAR},
      is_end = #{record.isEnd,jdbcType=BIT},
      enroll_cost = #{record.enrollCost,jdbcType=INTEGER},
      details = #{record.details,jdbcType=LONGVARCHAR},
      name_list = #{record.nameList,jdbcType=LONGVARCHAR},
      result = #{record.result,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_match
    set id = #{record.id,jdbcType=VARCHAR},
      match_name = #{record.matchName,jdbcType=VARCHAR},
      organization = #{record.organization,jdbcType=VARCHAR},
      match_content = #{record.matchContent,jdbcType=VARCHAR},
      match_time = #{record.matchTime,jdbcType=TIMESTAMP},
      match_place = #{record.matchPlace,jdbcType=VARCHAR},
      planning = #{record.planning,jdbcType=VARCHAR},
      schedule = #{record.schedule,jdbcType=VARCHAR},
      enroll_time = #{record.enrollTime,jdbcType=TIMESTAMP},
      enroll_time_end = #{record.enrollTimeEnd,jdbcType=TIMESTAMP},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_user = #{record.createUser,jdbcType=VARCHAR},
      match_del = #{record.matchDel,jdbcType=INTEGER},
      match_now = #{record.matchNow,jdbcType=INTEGER},
      time_quantum = #{record.timeQuantum,jdbcType=VARCHAR},
      is_end = #{record.isEnd,jdbcType=BIT},
      enroll_cost = #{record.enrollCost,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.billiard.entity.MatchWithBLOBs">
    update t_match
    <set>
      <if test="matchName != null">
        match_name = #{matchName,jdbcType=VARCHAR},
      </if>
      <if test="organization != null">
        organization = #{organization,jdbcType=VARCHAR},
      </if>
      <if test="matchContent != null">
        match_content = #{matchContent,jdbcType=VARCHAR},
      </if>
      <if test="matchTime != null">
        match_time = #{matchTime,jdbcType=TIMESTAMP},
      </if>
      <if test="matchPlace != null">
        match_place = #{matchPlace,jdbcType=VARCHAR},
      </if>
      <if test="planning != null">
        planning = #{planning,jdbcType=VARCHAR},
      </if>
      <if test="schedule != null">
        schedule = #{schedule,jdbcType=VARCHAR},
      </if>
      <if test="enrollTime != null">
        enroll_time = #{enrollTime,jdbcType=TIMESTAMP},
      </if>
      <if test="enrollTimeEnd != null">
        enroll_time_end = #{enrollTimeEnd,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="matchDel != null">
        match_del = #{matchDel,jdbcType=INTEGER},
      </if>
      <if test="matchNow != null">
        match_now = #{matchNow,jdbcType=INTEGER},
      </if>
      <if test="timeQuantum != null">
        time_quantum = #{timeQuantum,jdbcType=VARCHAR},
      </if>
      <if test="isEnd != null">
        is_end = #{isEnd,jdbcType=BIT},
      </if>
      <if test="enrollCost != null">
        enroll_cost = #{enrollCost,jdbcType=INTEGER},
      </if>
      <if test="details != null">
        details = #{details,jdbcType=LONGVARCHAR},
      </if>
      <if test="nameList != null">
        name_list = #{nameList,jdbcType=LONGVARCHAR},
      </if>
      <if test="result != null">
        result = #{result,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.billiard.entity.MatchWithBLOBs">
    update t_match
    set match_name = #{matchName,jdbcType=VARCHAR},
      organization = #{organization,jdbcType=VARCHAR},
      match_content = #{matchContent,jdbcType=VARCHAR},
      match_time = #{matchTime,jdbcType=TIMESTAMP},
      match_place = #{matchPlace,jdbcType=VARCHAR},
      planning = #{planning,jdbcType=VARCHAR},
      schedule = #{schedule,jdbcType=VARCHAR},
      enroll_time = #{enrollTime,jdbcType=TIMESTAMP},
      enroll_time_end = #{enrollTimeEnd,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=VARCHAR},
      match_del = #{matchDel,jdbcType=INTEGER},
      match_now = #{matchNow,jdbcType=INTEGER},
      time_quantum = #{timeQuantum,jdbcType=VARCHAR},
      is_end = #{isEnd,jdbcType=BIT},
      enroll_cost = #{enrollCost,jdbcType=INTEGER},
      details = #{details,jdbcType=LONGVARCHAR},
      name_list = #{nameList,jdbcType=LONGVARCHAR},
      result = #{result,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.billiard.entity.Match">
    update t_match
    set match_name = #{matchName,jdbcType=VARCHAR},
      organization = #{organization,jdbcType=VARCHAR},
      match_content = #{matchContent,jdbcType=VARCHAR},
      match_time = #{matchTime,jdbcType=TIMESTAMP},
      match_place = #{matchPlace,jdbcType=VARCHAR},
      planning = #{planning,jdbcType=VARCHAR},
      schedule = #{schedule,jdbcType=VARCHAR},
      enroll_time = #{enrollTime,jdbcType=TIMESTAMP},
      enroll_time_end = #{enrollTimeEnd,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=VARCHAR},
      match_del = #{matchDel,jdbcType=INTEGER},
      match_now = #{matchNow,jdbcType=INTEGER},
      time_quantum = #{timeQuantum,jdbcType=VARCHAR},
      is_end = #{isEnd,jdbcType=BIT},
      enroll_cost = #{enrollCost,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>