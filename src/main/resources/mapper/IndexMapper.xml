<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.billiard.dao.IndexMapper">
  <resultMap id="BaseResultMap" type="com.billiard.entity.Index">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="image_url" jdbcType="VARCHAR" property="imageUrl" />
    <result column="href_url" jdbcType="VARCHAR" property="hrefUrl" />
    <result column="jump_type" jdbcType="INTEGER" property="jumpType" />
    <result column="is_hidden" jdbcType="BIT" property="isHidden" />
    <result column="image_location" jdbcType="INTEGER" property="imageLocation" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.billiard.entity.Index">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, image_url, href_url, jump_type, is_hidden, image_location, create_time, create_user
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.billiard.entity.IndexExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_index
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.billiard.entity.IndexExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_index
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_index
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_index
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.billiard.entity.IndexExample">
    delete from t_index
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.billiard.entity.Index">
    insert into t_index (id, image_url, href_url, 
      jump_type, is_hidden, image_location, 
      create_time, create_user, content
      )
    values (#{id,jdbcType=INTEGER}, #{imageUrl,jdbcType=VARCHAR}, #{hrefUrl,jdbcType=VARCHAR}, 
      #{jumpType,jdbcType=INTEGER}, #{isHidden,jdbcType=BIT}, #{imageLocation,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{createUser,jdbcType=VARCHAR}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.billiard.entity.Index">
    insert into t_index
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="imageUrl != null">
        image_url,
      </if>
      <if test="hrefUrl != null">
        href_url,
      </if>
      <if test="jumpType != null">
        jump_type,
      </if>
      <if test="isHidden != null">
        is_hidden,
      </if>
      <if test="imageLocation != null">
        image_location,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="imageUrl != null">
        #{imageUrl,jdbcType=VARCHAR},
      </if>
      <if test="hrefUrl != null">
        #{hrefUrl,jdbcType=VARCHAR},
      </if>
      <if test="jumpType != null">
        #{jumpType,jdbcType=INTEGER},
      </if>
      <if test="isHidden != null">
        #{isHidden,jdbcType=BIT},
      </if>
      <if test="imageLocation != null">
        #{imageLocation,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.billiard.entity.IndexExample" resultType="java.lang.Long">
    select count(*) from t_index
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_index
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.imageUrl != null">
        image_url = #{record.imageUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.hrefUrl != null">
        href_url = #{record.hrefUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.jumpType != null">
        jump_type = #{record.jumpType,jdbcType=INTEGER},
      </if>
      <if test="record.isHidden != null">
        is_hidden = #{record.isHidden,jdbcType=BIT},
      </if>
      <if test="record.imageLocation != null">
        image_location = #{record.imageLocation,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update t_index
    set id = #{record.id,jdbcType=INTEGER},
      image_url = #{record.imageUrl,jdbcType=VARCHAR},
      href_url = #{record.hrefUrl,jdbcType=VARCHAR},
      jump_type = #{record.jumpType,jdbcType=INTEGER},
      is_hidden = #{record.isHidden,jdbcType=BIT},
      image_location = #{record.imageLocation,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_user = #{record.createUser,jdbcType=VARCHAR},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_index
    set id = #{record.id,jdbcType=INTEGER},
      image_url = #{record.imageUrl,jdbcType=VARCHAR},
      href_url = #{record.hrefUrl,jdbcType=VARCHAR},
      jump_type = #{record.jumpType,jdbcType=INTEGER},
      is_hidden = #{record.isHidden,jdbcType=BIT},
      image_location = #{record.imageLocation,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_user = #{record.createUser,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.billiard.entity.Index">
    update t_index
    <set>
      <if test="imageUrl != null">
        image_url = #{imageUrl,jdbcType=VARCHAR},
      </if>
      <if test="hrefUrl != null">
        href_url = #{hrefUrl,jdbcType=VARCHAR},
      </if>
      <if test="jumpType != null">
        jump_type = #{jumpType,jdbcType=INTEGER},
      </if>
      <if test="isHidden != null">
        is_hidden = #{isHidden,jdbcType=BIT},
      </if>
      <if test="imageLocation != null">
        image_location = #{imageLocation,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.billiard.entity.Index">
    update t_index
    set image_url = #{imageUrl,jdbcType=VARCHAR},
      href_url = #{hrefUrl,jdbcType=VARCHAR},
      jump_type = #{jumpType,jdbcType=INTEGER},
      is_hidden = #{isHidden,jdbcType=BIT},
      image_location = #{imageLocation,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=VARCHAR},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.billiard.entity.Index">
    update t_index
    set image_url = #{imageUrl,jdbcType=VARCHAR},
      href_url = #{hrefUrl,jdbcType=VARCHAR},
      jump_type = #{jumpType,jdbcType=INTEGER},
      is_hidden = #{isHidden,jdbcType=BIT},
      image_location = #{imageLocation,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>