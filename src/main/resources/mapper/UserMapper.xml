<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.billiard.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.billiard.entity.User">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="login_name" jdbcType="VARCHAR" property="loginName" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="salt" jdbcType="VARCHAR" property="salt" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="birthday" jdbcType="VARCHAR" property="birthday" />
    <result column="integral" jdbcType="INTEGER" property="integral" />
    <result column="sex" jdbcType="BIT" property="sex" />
    <result column="head_image" jdbcType="VARCHAR" property="headImage" />
    <result column="isStop" jdbcType="BIT" property="isstop" />
    <result column="surname" jdbcType="VARCHAR" property="surname" />
    <result column="create_time" property="createTime" />
    <result column="user_level" jdbcType="VARCHAR" property="userLevel" />
    <result column="user_grade" jdbcType="VARCHAR" property="userGrade" />
    <result column="user_profile" jdbcType="VARCHAR" property="userProfile" />
    <result column="clothes_size" jdbcType="VARCHAR" property="clothesSize" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id,surname, `nickname`, login_name, password, salt, phone, birthday, integral, sex, head_image, 
    isStop ,create_time,user_level ,user_grade,user_profile,clothes_size 
  </sql>
  <select id="selectByExample" parameterType="com.billiard.entity.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_user
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from t_user
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.billiard.entity.UserExample">
    delete from t_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.billiard.entity.User">
    insert into t_user (id, nickname, login_name, 
      password, salt, phone, 
      birthday, integral, sex, 
      head_image, isStop)
    values (#{id,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR}, #{loginName,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{salt,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{birthday,jdbcType=VARCHAR}, #{integral,jdbcType=INTEGER}, #{sex,jdbcType=BIT}, 
      #{headImage,jdbcType=VARCHAR}, #{isstop,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.billiard.entity.User">
    insert into t_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="nickname != null">
        nickname,
      </if>
      <if test="loginName != null">
        login_name,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="salt != null">
        salt,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="integral != null">
        integral,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="headImage != null">
        head_image,
      </if>
      <if test="isstop != null">
        isStop,
      </if>
       <if test="surname != null">
        surname,
      </if>
       <if test="userLevel != null">
        user_level,
      </if>
       <if test="userGrade != null">
        user_grade,
      </if>
       <if test="userProfile != null">
        user_profile,
      </if>
       <if test="clothesSize != null">
        clothes_size,
      </if>
       <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="loginName != null">
        #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        #{salt,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=VARCHAR},
      </if>
      <if test="integral != null">
        #{integral,jdbcType=INTEGER},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=BIT},
      </if>
      <if test="headImage != null">
        #{headImage,jdbcType=VARCHAR},
      </if>
      <if test="isstop != null">
        #{isstop,jdbcType=BIT},
      </if>
        <if test="surname != null">
        #{surname},
      </if>
        <if test="userLevel != null">
        #{userLevel},
      </if>
        <if test="userGrade != null">
        #{userGrade},
      </if>
        <if test="userProfile != null">
        #{userProfile},
      </if>
        <if test="clothesSize != null">
        #{clothesSize},
      </if>
       <if test="createTime != null">
       now(),
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.billiard.entity.UserExample" resultType="java.lang.Long">
    select count(*) from t_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.nickname != null">
        nickname = #{record.nickname,jdbcType=VARCHAR},
      </if>
      <if test="record.loginName != null">
        login_name = #{record.loginName,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.salt != null">
        salt = #{record.salt,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.birthday != null">
        birthday = #{record.birthday,jdbcType=VARCHAR},
      </if>
      <if test="record.integral != null">
        integral = #{record.integral,jdbcType=INTEGER},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=BIT},
      </if>
      <if test="record.headImage != null">
        head_image = #{record.headImage,jdbcType=VARCHAR},
      </if>
      <if test="record.isstop != null">
        isStop = #{record.isstop,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_user
    set id = #{record.id,jdbcType=VARCHAR},
      nickname = #{record.nickname,jdbcType=VARCHAR},
      login_name = #{record.loginName,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      salt = #{record.salt,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      birthday = #{record.birthday,jdbcType=VARCHAR},
      integral = #{record.integral,jdbcType=INTEGER},
      sex = #{record.sex,jdbcType=BIT},
      head_image = #{record.headImage,jdbcType=VARCHAR},
      isStop = #{record.isstop,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.billiard.entity.User">
    update t_user
    <set>
      <if test="nickname != null">
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="loginName != null">
        login_name = #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        salt = #{salt,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=VARCHAR},
      </if>
      <if test="integral != null">
        integral = #{integral,jdbcType=INTEGER},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=BIT},
      </if>
      <if test="headImage != null">
        head_image = #{headImage,jdbcType=VARCHAR},
      </if>
      <if test="isstop != null">
        isStop = #{isstop,jdbcType=BIT},
      </if>
       <if test="surname != null">
        surname = #{surname},
      </if>
       <if test="userLevel != null">
        user_level = #{userLevel},
      </if>
       <if test="userGrade != null">
        user_grade = #{userGrade},
      </if>
       <if test="userProfile != null">
        user_profile = #{userProfile},
      </if>
       <if test="clothesSize != null">
        clothes_size = #{clothesSize},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.billiard.entity.User">
    update t_user
    set nickname = #{nickname,jdbcType=VARCHAR},
      login_name = #{loginName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      salt = #{salt,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=VARCHAR},
      integral = #{integral,jdbcType=INTEGER},
      sex = #{sex,jdbcType=BIT},
      head_image = #{headImage,jdbcType=VARCHAR},
      isStop = #{isstop,jdbcType=BIT}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  
  <select id="getAllUser" resultType="HashMap" parameterType="com.billiard.entity.User">
  SELECT t_user.id,t_user.surname,t_user.nickname,t_user.login_name,t_user.phone,t_user.birthday,CASE t_user.sex WHEN 1 THEN '男' ELSE '女' END sex ,t_user.head_image ,t_user.isStop ,t_user.create_time,t_user.user_level,t_user.user_grade,t_user.user_profile,t_user.clothes_size ,IFNULL(b.wins,0)wins,IFNULL(b.lose,0)lose,IFNULL(b.plan,0)plan,IFNULL(b.intg,0)intg from t_user LEFT JOIN (SELECT user_id,SUM(CASE t_integral.winning WHEN 1 THEN 1 ELSE 0 END)wins ,SUM(CASE t_integral.winning WHEN -1 THEN 1 ELSE 0 END)lose,SUM(CASE t_integral.winning WHEN 0 THEN 1 ELSE 0 END)plan , SUM(CASE t_integral.winning WHEN 1 THEN IFNULL(t_integral.integral,0) ELSE 0 END) intg FROM t_integral GROUP BY user_id ) b ON b.user_id =t_user.id  
  <where>
  	  <trim  prefixOverrides="and" >
  	  	 <if test="paramStart != null" >
       <![CDATA[  and t_user.create_time >= #{paramStart} ]]>
      </if>
      <if test="paramEnd != null" >
        <![CDATA[  and t_user.create_time <= #{paramEnd}]]>
      </if>
     <if test="nickname != null and nickname != ''" >
        and t_user.nickname LIKE CONCAT('%',#{nickname},'%') 
      </if>
     <if test="phone != null and phone != ''" >
        and t_user.phone LIKE CONCAT('%',#{phone},'%') 
      </if>
     <if test="loginName != null and loginName !=''" >
        and t_user.login_name LIKE CONCAT('%',#{loginName},'%') 
      </if>
  	  </trim>
  </where>
  
  ORDER BY t_user.create_time desc
  </select>
</mapper>