<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.billiard.dao.IntegralMapper">
  <resultMap id="BaseResultMap" type="com.billiard.entity.Integral">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="ranking" jdbcType="VARCHAR" property="ranking" />
    <result column="match_time" jdbcType="TIMESTAMP" property="matchTime" />
    <result column="integral" jdbcType="INTEGER" property="integral" />
    <result column="match_id" jdbcType="VARCHAR" property="matchId" />
    <result column="match_name" jdbcType="VARCHAR" property="matchName" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="surname" jdbcType="VARCHAR" property="surname" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="winning" jdbcType="INTEGER" property="winning" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, ranking, match_time, integral, match_id, match_name, user_id, surname, user_name, 
    winning
  </sql>
  <select id="selectByExample" parameterType="com.billiard.entity.IntegralExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_integral
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_integral
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_integral
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.billiard.entity.IntegralExample">
    delete from t_integral
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.billiard.entity.Integral">
    insert into t_integral (id, ranking, match_time, 
      integral, match_id, match_name, 
      user_id, surname, user_name, 
      winning)
    values (#{id,jdbcType=INTEGER}, #{ranking,jdbcType=VARCHAR}, #{matchTime,jdbcType=TIMESTAMP}, 
      #{integral,jdbcType=INTEGER}, #{matchId,jdbcType=VARCHAR}, #{matchName,jdbcType=VARCHAR}, 
      #{userId,jdbcType=VARCHAR}, #{surname,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, 
      #{winning,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.billiard.entity.Integral">
    insert into t_integral
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="ranking != null">
        ranking,
      </if>
      <if test="matchTime != null">
        match_time,
      </if>
      <if test="integral != null">
        integral,
      </if>
      <if test="matchId != null">
        match_id,
      </if>
      <if test="matchName != null">
        match_name,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="surname != null">
        surname,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="winning != null">
        winning,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="ranking != null">
        #{ranking,jdbcType=VARCHAR},
      </if>
      <if test="matchTime != null">
        #{matchTime,jdbcType=TIMESTAMP},
      </if>
      <if test="integral != null">
        #{integral,jdbcType=INTEGER},
      </if>
      <if test="matchId != null">
        #{matchId,jdbcType=VARCHAR},
      </if>
      <if test="matchName != null">
        #{matchName,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="surname != null">
        #{surname,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="winning != null">
        #{winning,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.billiard.entity.IntegralExample" resultType="java.lang.Long">
    select count(*) from t_integral
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_integral
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.ranking != null">
        ranking = #{record.ranking,jdbcType=VARCHAR},
      </if>
      <if test="record.matchTime != null">
        match_time = #{record.matchTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.integral != null">
        integral = #{record.integral,jdbcType=INTEGER},
      </if>
      <if test="record.matchId != null">
        match_id = #{record.matchId,jdbcType=VARCHAR},
      </if>
      <if test="record.matchName != null">
        match_name = #{record.matchName,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.surname != null">
        surname = #{record.surname,jdbcType=VARCHAR},
      </if>
      <if test="record.userName != null">
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.winning != null">
        winning = #{record.winning,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_integral
    set id = #{record.id,jdbcType=INTEGER},
      ranking = #{record.ranking,jdbcType=VARCHAR},
      match_time = #{record.matchTime,jdbcType=TIMESTAMP},
      integral = #{record.integral,jdbcType=INTEGER},
      match_id = #{record.matchId,jdbcType=VARCHAR},
      match_name = #{record.matchName,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=VARCHAR},
      surname = #{record.surname,jdbcType=VARCHAR},
      user_name = #{record.userName,jdbcType=VARCHAR},
      winning = #{record.winning,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.billiard.entity.Integral">
    update t_integral
    <set>
      <if test="ranking != null">
        ranking = #{ranking,jdbcType=VARCHAR},
      </if>
      <if test="matchTime != null">
        match_time = #{matchTime,jdbcType=TIMESTAMP},
      </if>
      <if test="integral != null">
        integral = #{integral,jdbcType=INTEGER},
      </if>
      <if test="matchId != null">
        match_id = #{matchId,jdbcType=VARCHAR},
      </if>
      <if test="matchName != null">
        match_name = #{matchName,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="surname != null">
        surname = #{surname,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="winning != null">
        winning = #{winning,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.billiard.entity.Integral">
    update t_integral
    set ranking = #{ranking,jdbcType=VARCHAR},
      match_time = #{matchTime,jdbcType=TIMESTAMP},
      integral = #{integral,jdbcType=INTEGER},
      match_id = #{matchId,jdbcType=VARCHAR},
      match_name = #{matchName,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=VARCHAR},
      surname = #{surname,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      winning = #{winning,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  
  <select id="selectIntegralRank" parameterType="com.billiard.entity.Integral" resultType="HashMap">
   	SELECT
	score.*, @rownum :=@rownum + 1 rownum, t_user.surname,t_user.nickname,t_user.head_image,
	CASE
WHEN @rownum <![CDATA[> 3]]> THEN
	CASE score.s
WHEN @rowtotal THEN
	@sort := @sort
ELSE
	@sort := @sort + 1
END
ELSE
	CASE score.s
WHEN @rowtotal THEN
	@sort := @sort
ELSE
	@sort := @rownum
END END rank ,@rowtotal := score.s previous
FROM
	(
		SELECT
			user_id,
			SUM(
				CASE winning
				WHEN 1 THEN
					IFNULL(t_integral.integral, 0)
				ELSE
					0
				END
			) s
		FROM
			t_integral  
		<if test="matchTime != null">
         Where t_integral.match_time <![CDATA[ >=]]> #{matchTime}
     	 </if>
		GROUP BY
			user_id ORDER BY s DESC
	) score   JOIN t_user ON t_user.id = score.user_id and t_user.isStop!=1 and t_user.isStop!=2,
	(
		SELECT
			@rownum := 0 ,@rowtotal := null ,@sort := 0
	) r
	
  </select>

 <select id="selectWinsRank" parameterType="com.billiard.entity.Integral" resultType="HashMap">
 
 SELECT
	score.*, @rownum :=@rownum + 1 rownum,t_user.surname,t_user.nickname,t_user.head_image,
	CASE
WHEN @rownum <![CDATA[>]]> 3 THEN
	CASE 
WHEN @rowtotal=score.win AND @rowtotalplanishing=score.planishing AND @rowtotallose =score.lose THEN
	@sort := @sort
ELSE
	@sort := @sort + 1
END
ELSE
	CASE WHEN @rowtotal=score.win AND @rowtotalplanishing=score.planishing AND @rowtotallose =score.lose THEN
	@sort := @sort
ELSE
	@sort := @rownum
END END rank ,@rowtotal := score.win previous  ,@rowtotalplanishing := score.planishing,@rowtotallose:=score.lose
FROM
	(
		SELECT
			user_id,
			SUM(
				CASE winning
				WHEN 1 THEN
					1
				ELSE
					0
				END
			) win ,
	SUM(
				CASE winning
				WHEN 0 THEN
					1
				ELSE
					0
				END
			)planishing ,
	SUM(
				CASE winning
				WHEN -1 THEN
					1
				ELSE
					0
				END
			) lose 
		FROM
			t_integral 
	<if test="matchTime != null">
        Where t_integral.match_time <![CDATA[ >=]]> #{matchTime}
     	 </if>
		GROUP BY
			user_id ORDER BY win DESC  , lose 
	) score   JOIN t_user ON t_user.id = score.user_id and t_user.isStop!=1 and t_user.isStop!=2  ,
	(
		SELECT
			@rownum := 0 ,@rowtotal := null ,@rowtotalplanishing := null,@rowtotallose := null,@sort := 0
	) r
 </select>
  
</mapper>