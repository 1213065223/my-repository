<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.billiard.dao.MatchCourseMapper">
  <resultMap id="BaseResultMap" type="com.billiard.entity.MatchCourse">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="course_time" jdbcType="TIMESTAMP" property="courseTime" />
    <result column="course_place" jdbcType="VARCHAR" property="coursePlace" />
    <result column="team_one_id" jdbcType="VARCHAR" property="teamOneId" />
    <result column="team_one_name" jdbcType="VARCHAR" property="teamOneName" />
    <result column="team_two_id" jdbcType="VARCHAR" property="teamTwoId" />
    <result column="team_two_name" jdbcType="VARCHAR" property="teamTwoName" />
    <result column="match_id" jdbcType="VARCHAR" property="matchId" />
    <result column="win_lost" jdbcType="INTEGER" property="winLost" />
    <result column="integral" jdbcType="INTEGER" property="integral" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.billiard.entity.MatchCourse">
    <result column="match_detail" jdbcType="LONGVARCHAR" property="matchDetail" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, title, course_time, course_place, team_one_id, team_one_name, team_two_id, team_two_name, 
    match_id, win_lost, integral, create_time
  </sql>
  <sql id="Blob_Column_List">
    match_detail
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.billiard.entity.MatchCourseExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_match_course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.billiard.entity.MatchCourseExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_match_course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_match_course
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_match_course
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.billiard.entity.MatchCourseExample">
    delete from t_match_course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.billiard.entity.MatchCourse">
    insert into t_match_course (id, title, course_time, 
      course_place, team_one_id, team_one_name, 
      team_two_id, team_two_name, match_id, 
      win_lost, integral, create_time, 
      match_detail)
    values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{courseTime,jdbcType=TIMESTAMP}, 
      #{coursePlace,jdbcType=VARCHAR}, #{teamOneId,jdbcType=VARCHAR}, #{teamOneName,jdbcType=VARCHAR}, 
      #{teamTwoId,jdbcType=VARCHAR}, #{teamTwoName,jdbcType=VARCHAR}, #{matchId,jdbcType=VARCHAR}, 
      #{winLost,jdbcType=INTEGER}, #{integral,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{matchDetail,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.billiard.entity.MatchCourse">
    insert into t_match_course
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="courseTime != null">
        course_time,
      </if>
      <if test="coursePlace != null">
        course_place,
      </if>
      <if test="teamOneId != null">
        team_one_id,
      </if>
      <if test="teamOneName != null">
        team_one_name,
      </if>
      <if test="teamTwoId != null">
        team_two_id,
      </if>
      <if test="teamTwoName != null">
        team_two_name,
      </if>
      <if test="matchId != null">
        match_id,
      </if>
      <if test="winLost != null">
        win_lost,
      </if>
      <if test="integral != null">
        integral,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="matchDetail != null">
        match_detail,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="courseTime != null">
        #{courseTime,jdbcType=TIMESTAMP},
      </if>
      <if test="coursePlace != null">
        #{coursePlace,jdbcType=VARCHAR},
      </if>
      <if test="teamOneId != null">
        #{teamOneId,jdbcType=VARCHAR},
      </if>
      <if test="teamOneName != null">
        #{teamOneName,jdbcType=VARCHAR},
      </if>
      <if test="teamTwoId != null">
        #{teamTwoId,jdbcType=VARCHAR},
      </if>
      <if test="teamTwoName != null">
        #{teamTwoName,jdbcType=VARCHAR},
      </if>
      <if test="matchId != null">
        #{matchId,jdbcType=VARCHAR},
      </if>
      <if test="winLost != null">
        #{winLost,jdbcType=INTEGER},
      </if>
      <if test="integral != null">
        #{integral,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="matchDetail != null">
        #{matchDetail,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.billiard.entity.MatchCourseExample" resultType="java.lang.Long">
    select count(*) from t_match_course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_match_course
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.courseTime != null">
        course_time = #{record.courseTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.coursePlace != null">
        course_place = #{record.coursePlace,jdbcType=VARCHAR},
      </if>
      <if test="record.teamOneId != null">
        team_one_id = #{record.teamOneId,jdbcType=VARCHAR},
      </if>
      <if test="record.teamOneName != null">
        team_one_name = #{record.teamOneName,jdbcType=VARCHAR},
      </if>
      <if test="record.teamTwoId != null">
        team_two_id = #{record.teamTwoId,jdbcType=VARCHAR},
      </if>
      <if test="record.teamTwoName != null">
        team_two_name = #{record.teamTwoName,jdbcType=VARCHAR},
      </if>
      <if test="record.matchId != null">
        match_id = #{record.matchId,jdbcType=VARCHAR},
      </if>
      <if test="record.winLost != null">
        win_lost = #{record.winLost,jdbcType=INTEGER},
      </if>
      <if test="record.integral != null">
        integral = #{record.integral,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.matchDetail != null">
        match_detail = #{record.matchDetail,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update t_match_course
    set id = #{record.id,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      course_time = #{record.courseTime,jdbcType=TIMESTAMP},
      course_place = #{record.coursePlace,jdbcType=VARCHAR},
      team_one_id = #{record.teamOneId,jdbcType=VARCHAR},
      team_one_name = #{record.teamOneName,jdbcType=VARCHAR},
      team_two_id = #{record.teamTwoId,jdbcType=VARCHAR},
      team_two_name = #{record.teamTwoName,jdbcType=VARCHAR},
      match_id = #{record.matchId,jdbcType=VARCHAR},
      win_lost = #{record.winLost,jdbcType=INTEGER},
      integral = #{record.integral,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      match_detail = #{record.matchDetail,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_match_course
    set id = #{record.id,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      course_time = #{record.courseTime,jdbcType=TIMESTAMP},
      course_place = #{record.coursePlace,jdbcType=VARCHAR},
      team_one_id = #{record.teamOneId,jdbcType=VARCHAR},
      team_one_name = #{record.teamOneName,jdbcType=VARCHAR},
      team_two_id = #{record.teamTwoId,jdbcType=VARCHAR},
      team_two_name = #{record.teamTwoName,jdbcType=VARCHAR},
      match_id = #{record.matchId,jdbcType=VARCHAR},
      win_lost = #{record.winLost,jdbcType=INTEGER},
      integral = #{record.integral,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.billiard.entity.MatchCourse">
    update t_match_course
    <set>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="courseTime != null">
        course_time = #{courseTime,jdbcType=TIMESTAMP},
      </if>
      <if test="coursePlace != null">
        course_place = #{coursePlace,jdbcType=VARCHAR},
      </if>
      <if test="teamOneId != null">
        team_one_id = #{teamOneId,jdbcType=VARCHAR},
      </if>
      <if test="teamOneName != null">
        team_one_name = #{teamOneName,jdbcType=VARCHAR},
      </if>
      <if test="teamTwoId != null">
        team_two_id = #{teamTwoId,jdbcType=VARCHAR},
      </if>
      <if test="teamTwoName != null">
        team_two_name = #{teamTwoName,jdbcType=VARCHAR},
      </if>
      <if test="matchId != null">
        match_id = #{matchId,jdbcType=VARCHAR},
      </if>
      <if test="winLost != null">
        win_lost = #{winLost,jdbcType=INTEGER},
      </if>
      <if test="integral != null">
        integral = #{integral,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="matchDetail != null">
        match_detail = #{matchDetail,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.billiard.entity.MatchCourse">
    update t_match_course
    set title = #{title,jdbcType=VARCHAR},
      course_time = #{courseTime,jdbcType=TIMESTAMP},
      course_place = #{coursePlace,jdbcType=VARCHAR},
      team_one_id = #{teamOneId,jdbcType=VARCHAR},
      team_one_name = #{teamOneName,jdbcType=VARCHAR},
      team_two_id = #{teamTwoId,jdbcType=VARCHAR},
      team_two_name = #{teamTwoName,jdbcType=VARCHAR},
      match_id = #{matchId,jdbcType=VARCHAR},
      win_lost = #{winLost,jdbcType=INTEGER},
      integral = #{integral,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      match_detail = #{matchDetail,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.billiard.entity.MatchCourse">
    update t_match_course
    set title = #{title,jdbcType=VARCHAR},
      course_time = #{courseTime,jdbcType=TIMESTAMP},
      course_place = #{coursePlace,jdbcType=VARCHAR},
      team_one_id = #{teamOneId,jdbcType=VARCHAR},
      team_one_name = #{teamOneName,jdbcType=VARCHAR},
      team_two_id = #{teamTwoId,jdbcType=VARCHAR},
      team_two_name = #{teamTwoName,jdbcType=VARCHAR},
      match_id = #{matchId,jdbcType=VARCHAR},
      win_lost = #{winLost,jdbcType=INTEGER},
      integral = #{integral,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  
  
  <select id="selectPrevious" parameterType="com.billiard.entity.MatchCourse" resultMap="BaseResultMap">
  	 SELECT id ,title,create_time from t_match_course WHERE create_time <![CDATA[>]]> #{createTime}  ORDER BY create_time LIMIT 1
  	
  </select>
  <select id="selectNext" parameterType="com.billiard.entity.MatchCourse" resultMap="BaseResultMap">
  	 SELECT id ,title,create_time from t_match_course WHERE create_time <![CDATA[<]]> #{createTime}  ORDER BY create_time DESC LIMIT 1
  	
  </select>
  
  
</mapper>